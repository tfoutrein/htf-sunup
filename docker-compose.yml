services:
  postgres:
    image: postgres:15
    container_name: htf_sunup_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: htf_sunup_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
      FRONTEND_URL: ${FRONTEND_URL}
      CORS_ORIGIN: ${CORS_ORIGIN}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      FACEBOOK_AUTH_ENABLED: ${FACEBOOK_AUTH_ENABLED}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      FACEBOOK_CALLBACK_URL: ${FACEBOOK_CALLBACK_URL}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_REGION: ${S3_REGION}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/backend/src:/app/apps/backend/src
      - ./apps/backend/drizzle:/app/apps/backend/drizzle
      - ./apps/backend/drizzle.config.ts:/app/apps/backend/drizzle.config.ts

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: htf_sunup_frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_FACEBOOK_AUTH_ENABLED: ${NEXT_PUBLIC_FACEBOOK_AUTH_ENABLED}
      NEXT_PUBLIC_FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
    ports:
      - '3000:3000'
    depends_on:
      - backend
    volumes:
      - ./apps/frontend/src:/app/apps/frontend/src
      - ./apps/frontend/package.json:/app/apps/frontend/package.json

volumes:
  postgres_data:
