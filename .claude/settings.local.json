{
  "permissions": {
    "allow": [
      "mcp__github__search_repositories",
      "Bash(git clone:*)",
      "Bash(cp:*)",
      "Bash(true)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git remote remove:*)",
      "Bash(pnpm install:*)",
      "Bash(mkdir:*)",
      "Bash(docker compose:*)",
      "Bash(docker container rm:*)",
      "mcp__github__create_repository",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "mcp__github__search_users",
      "Bash(gh repo delete:*)",
      "Bash(gh auth:*)",
      "Bash(git remote set-url:*)",
      "mcp__github__get_file_contents",
      "Bash(git fetch:*)",
      "Bash(vercel login:*)",
      "Bash(vercel)",
      "Bash(vercel:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm start:*)",
      "Bash(git rm:*)",
      "Bash(git checkout:*)",
      "Bash(pnpm --filter frontend add @heroui/react @heroui/theme framer-motion)",
      "Bash(pnpm list:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose up:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(git branch:*)",
      "Bash(pnpm db:generate:*)",
      "Bash(docker logs:*)",
      "Bash(curl:*)",
      "Bash(mv:*)",
      "Bash(docker exec:*)",
      "Bash(pnpm run:*)",
      "Bash(drizzle-kit generate:*)",
      "Bash(pnpm drizzle-kit:*)",
      "Bash(pnpm db:migrate:*)",
      "Bash(pnpm:*)",
      "Bash(pkill:*)",
      "Bash(PGPASSWORD=\"NxW7QrfoU2l7Lry090Q69gj8qDkgFny0\" psql -h dpg-d1b8fsadbo4c73c9ier0-a -U htf_sunup_postgres_user -d htf_sunup_postgres -c \"\\d actions\")",
      "Bash(DATABASE_URL=\"postgresql://htf_sunup_postgres_user:NxW7QrfoU2l7Lry090Q69gj8qDkgFny0@dpg-d1b8fsadbo4c73c9ier0-a.oregon-postgres.render.com/htf_sunup_postgres\" pnpm --filter backend db:deploy)",
      "Bash(DATABASE_URL=\"postgresql://htf_sunup_postgres_user:NxW7QrfoU2l7Lry090Q69gj8qDkgFny0@dpg-d1b8fsadbo4c73c9ier0-a.oregon-postgres.render.com/htf_sunup_postgres\" pnpm -w run back:dev)",
      "Bash(grep:*)",
      "Bash(DATABASE_URL='postgresql://postgres:postgres@localhost:5432/htf_sunup_db' pnpm db:migrate)",
      "Bash(createdb:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/htf_sunup_db_test\" pnpm db:deploy)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(ls:*)",
      "Bash(docker restart:*)",
      "Bash(touch:*)",
      "Bash(rg:*)",
      "Bash(npx tsc:*)",
      "Bash(docker rmi:*)",
      "Bash(docker stop:*)",
      "Bash(node:*)",
      "Bash(find:*)",
      "Bash(npm run:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d htf_sunup_db -c \"SELECT * FROM user_actions LIMIT 10;\")",
      "Bash(npx drizzle-kit:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -c \"\nCREATE TABLE IF NOT EXISTS access_requests (\n  id serial PRIMARY KEY NOT NULL,\n  name varchar(255) NOT NULL,\n  email varchar(255) NOT NULL,\n  requested_role varchar(50) DEFAULT 'fbo' NOT NULL,\n  requested_manager_id integer,\n  status varchar(50) DEFAULT 'pending' NOT NULL,\n  message text,\n  reviewed_by integer,\n  reviewed_at timestamp,\n  review_comment text,\n  created_at timestamp DEFAULT now() NOT NULL,\n  updated_at timestamp DEFAULT now() NOT NULL,\n  CONSTRAINT access_requests_email_unique UNIQUE(email)\n);\n\nALTER TABLE access_requests ADD CONSTRAINT IF NOT EXISTS access_requests_requested_manager_id_users_id_fk FOREIGN KEY (requested_manager_id) REFERENCES users(id);\nALTER TABLE access_requests ADD CONSTRAINT IF NOT EXISTS access_requests_reviewed_by_users_id_fk FOREIGN KEY (reviewed_by) REFERENCES users(id);\n\")",
      "Bash(npx ts-node:*)",
      "Bash(npx eslint:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -c \"ALTER TABLE access_requests ADD COLUMN IF NOT EXISTS temporary_password varchar(255);\")",
      "mcp__portpilot__get_project_ports",
      "mcp__portpilot__get_next_port",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/htf_sunup_db npm run db:fix-passwords)",
      "Bash(psql:*)",
      "Bash(npx tsx:*)",
      "mcp__postgres-defi-de-l-ete__query",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -c \"SELECT * FROM __drizzle_migrations ORDER BY id;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -c \"\\dt\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -f apps/backend/drizzle/0008_brave_songbird.sql)",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -f /Users/tfoutrein/DEV/PERSO/PROJECTS/htf-sunup/apps/backend/drizzle/0008_brave_songbird.sql)",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -d htf_sunup_db -c \"\nINSERT INTO app_versions (version, title, release_date, is_active, is_major, short_description, full_release_notes) \nVALUES \n(''1.2.0'', ''Nouveau syst√®me de bonus quotidiens'', ''2025-08-10'', true, true, \n''üéâ Nouvelle fonctionnalit√© : D√©clarez vos paniers et parrainages quotidiens ! Syst√®me de validation par vos managers et suivi de vos gains en temps r√©el.'', \n''## Nouvelles fonctionnalit√©s\\n\\n- **Bonus quotidiens** : D√©clarez vos paniers et parrainages\\n- **Upload de preuves** : Photos et vid√©os pour valider vos bonus\\n- **Validation manager** : Workflow d''''approbation complet\\n- **Compteur de gains** : Suivi en temps r√©el de vos euros gagn√©s\\n\\n## Am√©liorations\\n\\n- Interface plus fluide et responsive\\n- Animations et effets visuels am√©lior√©s''),\n\n(''1.1.0'', ''Syst√®me de preuves multiples'', ''2025-07-15'', true, false,\n''üì∏ Vous pouvez maintenant uploader plusieurs preuves par action ! Photos et vid√©os accept√©es.'',\n''## Am√©liorations\\n\\n- Upload multiple de preuves par action\\n- Support vid√©os en plus des photos\\n- Visionneuse am√©lior√©e des preuves\\n- Gestion d''''erreur renforc√©e'')\n;\")",
      "Bash(-H \"Content-Type: application/json\")"
    ],
    "deny": []
  }
}